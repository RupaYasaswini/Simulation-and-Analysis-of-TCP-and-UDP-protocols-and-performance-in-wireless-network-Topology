UDP.tcl
# Simulation parameters setup
set val(chan) Channel/WirelessChannel ;# channel type
set val(prop) Propagation/TwoRayGround ;# radio-propagation model
set val(netif) Phy/WirelessPhy ;# network interface type
set val(mac) Mac/802_11 ;# MAC type
set val(ifq) Queue/DropTail/PriQueue ;# interface queue type
set val(ll) LL ;# link layer type
set val(ant) Antenna/OmniAntenna ;# antenna model
set val(ifqlen) 50 ;# max packet in ifq
set val(nn) 21 ;# number of mobilenodes
set val(rp) AODV ;# routing protocol
set val(x) 1054 ;# X dimension of topography
set val(y) 600 ;# Y dimension of topography
set val(stop) 20.0 ;# time of simulation end
# Initialization
#Create a ns simulator
set ns [new Simulator]
#Setup topography object
set topo [new Topography]
$topo load_flatgrid $val(x) $val(y)
create-god $val(nn)
#color codes
$ns color 1 green
$ns color 2 red
$ns color 3 blue
#Open the NS trace file
set tracefile [open AODVudp.tr w]
$ns trace-all $tracefile
$ns use-newtrace
#Open the NAM trace file
set namfile [open AODVudp.nam w]
$ns namtrace-all $namfile

$ns namtrace-all-wireless $namfile $val(x) $val(y)
set chan [new $val(chan)];
#Create wireless channel
# Mobile node parameter setup
$ns node-config -adhocRouting $val(rp) \
-llType $val(ll) \
-macType $val(mac) \
-ifqType $val(ifq) \
-ifqLen $val(ifqlen) \
-antType $val(ant) \
-propType $val(prop) \
-phyType $val(netif) \
-channel $chan \
-topoInstance $topo \
-agentTrace ON \
-routerTrace ON \
-macTrace ON \
-movementTrace ON
# Nodes Definition
#Create 21 nodes
set n0 [$ns node]
$n0 set X_ 607
$n0 set Y_ 451
$n0 set Z_ 0.0
$ns initial_node_pos $n0 20
set n1 [$ns node]
$n1 set X_ 525
$n1 set Y_ 390
$n1 set Z_ 0.0
$ns initial_node_pos $n1 20
set n2 [$ns node]
$n2 set X_ 691
$n2 set Y_ 386
$n2 set Z_ 0.0
$ns initial_node_pos $n2 20
set n3 [$ns node]
$n3 set X_ 437
$n3 set Y_ 318
$n3 set Z_ 0.0


$ns initial_node_pos $n3 20
set n4 [$ns node]
$n4 set X_ 776
$n4 set Y_ 304
$n4 set Z_ 0.0
$ns initial_node_pos $n4 20
set n5 [$ns node]
$n5 set X_ 339
$n5 set Y_ 240
$n5 set Z_ 0.0
$ns initial_node_pos $n5 20
set n6 [$ns node]
$n6 set X_ 849
$n6 set Y_ 225
$n6 set Z_ 0.0
$ns initial_node_pos $n6 20
set n7 [$ns node]
$n7 set X_ 397
$n7 set Y_ 158
$n7 set Z_ 0.0
$ns initial_node_pos $n7 20
set n8 [$ns node]
$n8 set X_ 760
$n8 set Y_ 139
$n8 set Z_ 0.0
$ns initial_node_pos $n8 20
set n9 [$ns node]
$n9 set X_ 473
$n9 set Y_ 78
$n9 set Z_ 0.0
$ns initial_node_pos $n9 20
set n10 [$ns node]
$n10 set X_ 683
$n10 set Y_ 78
$n10 set Z_ 0.0
$ns initial_node_pos $n10 20
set n11 [$ns node]
$n11 set X_ 571
$n11 set Y_ 22
$n11 set Z_ 0.0
$ns initial_node_pos $n11 20


set n12 [$ns node]
$n12 set X_ 598
$n12 set Y_ 344
$n12 set Z_ 0.0
$ns initial_node_pos $n12 20
set n13 [$ns node]
$n13 set X_ 591
$n13 set Y_ 235
$n13 set Z_ 0.0
$ns initial_node_pos $n13 20
set n14 [$ns node]
$n14 set X_ 580
$n14 set Y_ 126
$n14 set Z_ 0.0
$ns initial_node_pos $n14 20
set n15 [$ns node]
$n15 set X_ 463
$n15 set Y_ 236
$n15 set Z_ 0.0
$ns initial_node_pos $n15 20
set n16 [$ns node]
$n16 set X_ 729
$n16 set Y_ 232
$n16 set Z_ 0.0
$ns initial_node_pos $n16 20
set n17 [$ns node]
$n17 set X_ 411
$n17 set Y_ 430
$n17 set Z_ 0.0
$ns initial_node_pos $n17 20
set n18 [$ns node]
$n18 set X_ 837
$n18 set Y_ 424
$n18 set Z_ 0.0
$ns initial_node_pos $n18 20
set n19 [$ns node]
$n19 set X_ 355
$n19 set Y_ 72
$n19 set Z_ 0.0
$ns initial_node_pos $n19 20
set n20 [$ns node]

$n20 set X_ 811
$n20 set Y_ 43
$n20 set Z_ 0.0
$ns initial_node_pos $n20 20
# Generate movement
$ns at 8 " $n2 setdest 756 500 34 "
$ns at 8 " $n3 setdest 298 378 37 "
$ns at 7 " $n10 setdest 690 23 39 "
$ns at 6 " $n13 setdest 954 252 35 "
#setting nodes physical properties
$n0 color "green"
$n1 color "green"
$n2 color "green"
$n4 color "green"
$n5 color "green"
$n6 color "green"
$n7 color "green"
$n9 color "green"
$n11 color "green"
$n13 color "green"
$n14 color "green"
$n15 color "green"
$n16 color "green"
$n17 color "green"
$n19 color "green"
$n20 color "green"
$n3 color "red"
$n12 color "red"
$n18 color "red"
$n19 color "blue"
$n8 color "blue"
$n10 color "blue"
#Setup a UDP connection
set udp6 [new Agent/UDP]
$ns attach-agent $n3 $udp6
set null9 [new Agent/Null]
$ns attach-agent $n19 $null9
$ns connect $udp6 $null9
$udp6 set packetSize_ 1500

#Setup a UDP connection
set udp7 [new Agent/UDP]
$ns attach-agent $n12 $udp7
set null10 [new Agent/Null]
$ns attach-agent $n8 $null10
$ns connect $udp7 $null10
$udp7 set packetSize_ 1500
#Setup a UDP connection
set udp8 [new Agent/UDP]
$ns attach-agent $n18 $udp8
set null11 [new Agent/Null]
$ns attach-agent $n10 $null11
$ns connect $udp8 $null11
$udp8 set packetSize_ 1500
# Applications Definition
#Setup a CBR Application over UDP connection
set cbr4 [new Application/Traffic/CBR]
$cbr4 attach-agent $udp6
$cbr4 set packetSize_ 1500
$cbr4 set rate_ 1.0Mb
$cbr4 set random_ null
$ns at 1.0 "$cbr4 start"
$ns at 20.0 "$cbr4 stop"
#Setup a CBR Application over UDP connection
set cbr5 [new Application/Traffic/CBR]
$cbr5 attach-agent $udp7
$cbr5 set packetSize_ 1500
$cbr5 set rate_ 1.0Mb
$cbr5 set random_ null
$ns at 3.0 "$cbr5 start"
$ns at 20.0 "$cbr5 stop"
#Setup a CBR Application over UDP connection
set cbr6 [new Application/Traffic/CBR]
$cbr6 attach-agent $udp8
$cbr6 set packetSize_ 1500

$cbr6 set rate_ 1.0Mb
$cbr6 set random_ null
$ns at 6.0 "$cbr6 start"
$ns at 20.0 "$cbr6 stop"
# Termination
#Define a 'finish' procedure
proc finish {} {
global ns tracefile namfile
$ns flush-trace
close $tracefile
close $namfile
exec nam AODVudp.nam &
exec -f .e2e.awk AODVudp.tr &
exec -f pdr.awk AODVudp.tr &
exit 0
}
#scheduling the events
$ns at 0.1 "$n0 color \"green\""
$ns at 0.1 "$n1 color \"green\""
$ns at 0.1 "$n2 color \"green\""
$ns at 0.1 "$n4 color \"green\""
$ns at 0.1 "$n5 color \"green\""
$ns at 0.1 "$n6 color \"green\""
$ns at 0.1 "$n7 color \"green\""
$ns at 0.1 "$n9 color \"green\""
$ns at 0.1 "$n11 color \"green\""
$ns at 0.1 "$n13 color \"green\""
$ns at 0.1 "$n14 color \"green\""
$ns at 0.1 "$n15 color \"green\""
$ns at 0.1 "$n16 color \"green\""
$ns at 0.1 "$n17 color \"green\""
$ns at 0.1 "$n19 color \"green\""
$ns at 0.1 "$n20 color \"green\""
$ns at 0.1 "$n3 color \"red\""
$ns at 0.1 "$n12 color \"red\""
$ns at 0.1 "$n18 color \"red\""
$ns at 0.1 "$n19 color \"blue\""
$ns at 0.1 "$n8 color \"blue\""
$ns at 0.1 "$n10 color \"blue\""


for {set i 0} {$i < $val(nn) } { incr i } {
$ns at $val(stop) "\$n$i reset"
}
$ns at $val(stop) "$ns nam-end-wireless $val(stop)"
$ns at $val(stop) "finish"
$ns at $val(stop) "puts \"done\" ; $ns halt"
$ns run